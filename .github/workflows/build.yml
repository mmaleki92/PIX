name: Build and Release PyQt5 Application

on:
  push:
    tags:
      - 'v*'  # Trigger the workflow when a tag starting with "v" is pushed, e.g., v1.0
  release:
    types: [published]  # Optional, trigger on manual release creation

jobs:
  # Build for Linux
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Linux executable with PyInstaller
        run: |
          pip install pyinstaller
          pyinstaller --onefile --windowed --icon=icon.png main.py

      - name: Save Linux artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-executable
          path: dist/*

  # Build for Windows
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Windows executable with PyInstaller
        run: |
          pip install pyinstaller
          pyinstaller --onefile --windowed --icon=icon.png main.py


      - name: Save Windows artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows-executable
          path: dist/*

  # Create GitHub release
  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v2
        with:
          name: linux-executable
          path: linux

      - name: Download Windows artifact
        uses: actions/download-artifact@v2
        with:
          name: windows-executable
          path: windows

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}  # Uses the tag that triggered the workflow
          release_name: Release ${{ github.ref_name }}
          body: |
            Automated release for version ${{ github.ref_name }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux executable to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: linux/dist/app  # Replace `app` with your actual executable name
          asset_name: app-linux  # Replace `app-linux` with desired file name
          asset_content_type: application/octet-stream

      - name: Upload Windows executable to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows/dist/app.exe  # Replace `app.exe` with your actual executable name
          asset_name: app-windows.exe  # Replace `app-windows.exe` with desired file name
          asset_content_type: application/octet-stream
